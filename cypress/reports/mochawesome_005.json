{
  "stats": {
    "suites": 5,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-21T16:37:05.609Z",
    "end": "2022-07-21T16:37:18.778Z",
    "duration": 13169,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "eed5064d-d542-42ea-8c70-37528356de05",
      "title": "",
      "fullFile": "cypress/integration/19-23-recipes_spec.js",
      "file": "cypress/integration/19-23-recipes_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d812e16-aaa1-4915-99a2-ea6592b18818",
          "title": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 2017,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "766cb081-7456-4c50-ac17-e8c25d99f77e",
              "parentUUID": "4d812e16-aaa1-4915-99a2-ea6592b18818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 2203,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "84c12597-2aa5-4624-bd1e-fa9f96212704",
              "parentUUID": "4d812e16-aaa1-4915-99a2-ea6592b18818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "fullTitle": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (let index = 0; index < 12; index += 1) {\n  cy.get(`[data-testid=\"${index}-recipe-card\"]`);\n  cy.get(`[data-testid=\"${index}-card-img\"]`);\n  cy.get(`[data-testid=\"${index}-card-name\"]`);\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "b44dd09e-52f4-4c44-833e-d3df3e85af61",
              "parentUUID": "4d812e16-aaa1-4915-99a2-ea6592b18818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "fullTitle": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (let index = 0; index < 12; index += 1) {\n  cy.get(`[data-testid=\"${index}-recipe-card\"]`);\n  cy.get(`[data-testid=\"${index}-card-img\"]`);\n  cy.get(`[data-testid=\"${index}-card-name\"]`);\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "3b4dacc3-7dad-417b-ac96-5f76a473e27c",
              "parentUUID": "4d812e16-aaa1-4915-99a2-ea6592b18818",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "766cb081-7456-4c50-ac17-e8c25d99f77e",
            "84c12597-2aa5-4624-bd1e-fa9f96212704",
            "b44dd09e-52f4-4c44-833e-d3df3e85af61",
            "3b4dacc3-7dad-417b-ac96-5f76a473e27c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4573,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a4d6cf5b-c3ac-463f-95f9-78a6746bc676",
          "title": "20 - Implemente os bot천es de categoria para serem utilizados como filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "fullTitle": "20 - Implemente os bot천es de categoria para serem utilizados como filtro Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nmealCategoriesMock.meals.slice(0, 5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`);\n});\nmealCategoriesMock.meals.slice(5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`).should('not.exist');\n});",
              "err": {},
              "uuid": "0dd28a3c-53dc-4f49-989d-8a853df0dc9b",
              "parentUUID": "a4d6cf5b-c3ac-463f-95f9-78a6746bc676",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "fullTitle": "20 - Implemente os bot천es de categoria para serem utilizados como filtro Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ndrinkCategoriesMock.drinks.slice(0, 5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`);\n});\ndrinkCategoriesMock.drinks.slice(5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`).should('not.exist');\n});",
              "err": {},
              "uuid": "424dd7b1-91b4-4359-bdfd-3d289f9977a9",
              "parentUUID": "a4d6cf5b-c3ac-463f-95f9-78a6746bc676",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a cobertura de 45% da tela de receitas",
              "fullTitle": "20 - Implemente os bot천es de categoria para serem utilizados como filtro Verifica a cobertura de 45% da tela de receitas",
              "timedOut": null,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', getId()).its('Recipes.functions.pct').should('be.gte', 45.00);\ncy.task('getCoverage', getId()).its('Recipes.lines.pct').should('be.gte', 45.00);\ncy.task('getCoverage', getId()).its('Recipes.branches.pct').should('be.gte', 45.00);",
              "err": {},
              "uuid": "aa62d32d-2145-4071-9dd5-cfa252d13654",
              "parentUUID": "a4d6cf5b-c3ac-463f-95f9-78a6746bc676",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0dd28a3c-53dc-4f49-989d-8a853df0dc9b",
            "424dd7b1-91b4-4359-bdfd-3d289f9977a9",
            "aa62d32d-2145-4071-9dd5-cfa252d13654"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
          "title": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);",
              "err": {},
              "uuid": "a036e5c2-b11d-486f-ae9b-b5c341850320",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "a50cc20d-5b8f-40c4-b5c7-7bc6a31257ab",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Chicken-category-filter\"]').click();\ncheckFirstTwelveRecipes(chickenMealsMock.meals);",
              "err": {},
              "uuid": "daa4012e-038b-4340-90b1-b52355903d0e",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Dessert-category-filter\"]').click();\ncheckFirstTwelveRecipes(dessertMealsMock.meals);",
              "err": {},
              "uuid": "c22b95ad-37fc-4467-94d2-c54fd5ee0af0",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Goat-category-filter\"]').click();\ncheckFirstTwelveRecipes(goatMealsMock.meals);",
              "err": {},
              "uuid": "ceb8735c-ef4e-44f0-b355-7edc3ead9a60",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "timedOut": null,
              "duration": 1734,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);",
              "err": {},
              "uuid": "87fd911e-2d3c-4e08-93b3-67284fb6d885",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "a6236b8e-693b-4d6e-92cc-30b7921ead03",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Shake\", deve-se carregar as 12 primeiras receitas de \"Shake\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Shake\", deve-se carregar as 12 primeiras receitas de \"Shake\"",
              "timedOut": null,
              "duration": 285,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Shake-category-filter\"]').click();\ncheckFirstTwelveRecipes(milkDrinksMock.drinks, false);",
              "err": {},
              "uuid": "909fc9bf-590b-425e-a1e4-bfa117bdbed7",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Other/Unknown-category-filter\"]').click();\ncheckFirstTwelveRecipes(otherDrinksMock.drinks, false);",
              "err": {},
              "uuid": "ebe37e85-9caf-485c-b3c2-5567a8572062",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocoa-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocoaDrinksMock.drinks, false);",
              "err": {},
              "uuid": "275100d7-ae0e-4124-89a3-d11507a0e4fd",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida deve existir a op챌찾o de filtrar por todas as categorias",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida deve existir a op챌찾o de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 485,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "447a34c2-0773-4476-bcf0-3ba55371bf8c",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida deve existir a op챌찾o de filtrar por todas as categorias",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida deve existir a op챌찾o de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 497,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "72253cc9-687e-4818-b09c-371c1f9ee151",
              "parentUUID": "e9b91575-95d4-48e3-adfd-1acf55ec4e8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a036e5c2-b11d-486f-ae9b-b5c341850320",
            "a50cc20d-5b8f-40c4-b5c7-7bc6a31257ab",
            "daa4012e-038b-4340-90b1-b52355903d0e",
            "c22b95ad-37fc-4467-94d2-c54fd5ee0af0",
            "ceb8735c-ef4e-44f0-b355-7edc3ead9a60",
            "87fd911e-2d3c-4e08-93b3-67284fb6d885",
            "a6236b8e-693b-4d6e-92cc-30b7921ead03",
            "909fc9bf-590b-425e-a1e4-bfa117bdbed7",
            "ebe37e85-9caf-485c-b3c2-5567a8572062",
            "275100d7-ae0e-4124-89a3-d11507a0e4fd",
            "447a34c2-0773-4476-bcf0-3ba55371bf8c",
            "72253cc9-687e-4818-b09c-371c1f9ee151"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17cf59a0-2b58-432d-aee0-e051f2a6dc21",
          "title": "22 - Implemente o filtro como um toggle, o qual se for selecionado novamente, o app deve retornar as receitas sem nenhum filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "22 - Implemente o filtro como um toggle, o qual se for selecionado novamente, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "577b0ce4-50cf-4b3e-8a9d-2d1e01a73e01",
              "parentUUID": "17cf59a0-2b58-432d-aee0-e051f2a6dc21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "22 - Implemente o filtro como um toggle, o qual se for selecionado novamente, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 413,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "c9dfaa2f-d3b7-41f8-82b1-85fc060b42b3",
              "parentUUID": "17cf59a0-2b58-432d-aee0-e051f2a6dc21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "577b0ce4-50cf-4b3e-8a9d-2d1e01a73e01",
            "c9dfaa2f-d3b7-41f8-82b1-85fc060b42b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 822,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "710da89c-2cd3-4acd-baf6-ba7ec74d6725",
          "title": "23 - Redirecione a pessoa usu찼ria ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "23 - Redirecione a pessoa usu찼ria ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(loc => expect(loc.pathname).to.eq('/foods/52977'));",
              "err": {},
              "uuid": "d2da2428-183d-4b89-899a-410050fc7cfd",
              "parentUUID": "710da89c-2cd3-4acd-baf6-ba7ec74d6725",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "23 - Redirecione a pessoa usu찼ria ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(loc => expect(loc.pathname).to.eq('/drinks/15997'));",
              "err": {},
              "uuid": "5860373d-9db9-4df7-8386-33477219ebbd",
              "parentUUID": "710da89c-2cd3-4acd-baf6-ba7ec74d6725",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a cobertura de 90% da Tela de Receitas",
              "fullTitle": "23 - Redirecione a pessoa usu찼ria ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Verifica a cobertura de 90% da Tela de Receitas",
              "timedOut": null,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', getId()).its('Recipes.functions.pct').should('be.gte', 90.00);\ncy.task('getCoverage', getId()).its('Recipes.lines.pct').should('be.gte', 90.00);\ncy.task('getCoverage', getId()).its('Recipes.branches.pct').should('be.gte', 90.00);",
              "err": {},
              "uuid": "0809e372-8113-4cf8-b3ee-ed27006f2254",
              "parentUUID": "710da89c-2cd3-4acd-baf6-ba7ec74d6725",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2da2428-183d-4b89-899a-410050fc7cfd",
            "5860373d-9db9-4df7-8386-33477219ebbd",
            "0809e372-8113-4cf8-b3ee-ed27006f2254"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 472,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}