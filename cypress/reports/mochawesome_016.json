{
  "stats": {
    "suites": 5,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-21T20:39:34.953Z",
    "end": "2022-07-21T20:39:48.728Z",
    "duration": 13775,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a597f934-b0e5-4e58-96f8-e8c9c9381fb9",
      "title": "",
      "fullFile": "cypress/integration/19-23-recipes_spec.js",
      "file": "cypress/integration/19-23-recipes_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d325fecb-2b10-49c9-8ba9-9c11311bce43",
          "title": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 2214,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "c3daa14f-4925-49ad-b995-7f4450c4be2f",
              "parentUUID": "d325fecb-2b10-49c9-8ba9-9c11311bce43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 2295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "6c0b0d25-ea1c-4789-a7aa-911dcf5101d5",
              "parentUUID": "d325fecb-2b10-49c9-8ba9-9c11311bce43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "fullTitle": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (let index = 0; index < 12; index += 1) {\n  cy.get(`[data-testid=\"${index}-recipe-card\"]`);\n  cy.get(`[data-testid=\"${index}-card-img\"]`);\n  cy.get(`[data-testid=\"${index}-card-name\"]`);\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "74b92ec6-7195-4387-8f69-0a4082c4dd47",
              "parentUUID": "d325fecb-2b10-49c9-8ba9-9c11311bce43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "fullTitle": "19 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (let index = 0; index < 12; index += 1) {\n  cy.get(`[data-testid=\"${index}-recipe-card\"]`);\n  cy.get(`[data-testid=\"${index}-card-img\"]`);\n  cy.get(`[data-testid=\"${index}-card-name\"]`);\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "b159a324-5f82-4197-84b6-c31ae892bac0",
              "parentUUID": "d325fecb-2b10-49c9-8ba9-9c11311bce43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3daa14f-4925-49ad-b995-7f4450c4be2f",
            "6c0b0d25-ea1c-4789-a7aa-911dcf5101d5",
            "74b92ec6-7195-4387-8f69-0a4082c4dd47",
            "b159a324-5f82-4197-84b6-c31ae892bac0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4877,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "26bb74c9-51b2-4729-b9c8-b79d84187fe2",
          "title": "20 - Implemente os bot천es de categoria para serem utilizados como filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "fullTitle": "20 - Implemente os bot천es de categoria para serem utilizados como filtro Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nmealCategoriesMock.meals.slice(0, 5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`);\n});\nmealCategoriesMock.meals.slice(5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`).should('not.exist');\n});",
              "err": {},
              "uuid": "4664f592-6612-4430-80c9-baef5b5137ab",
              "parentUUID": "26bb74c9-51b2-4729-b9c8-b79d84187fe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "fullTitle": "20 - Implemente os bot천es de categoria para serem utilizados como filtro Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ndrinkCategoriesMock.drinks.slice(0, 5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`);\n});\ndrinkCategoriesMock.drinks.slice(5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`).should('not.exist');\n});",
              "err": {},
              "uuid": "28a72a3e-63fd-4c87-bc02-3a529a1b39c8",
              "parentUUID": "26bb74c9-51b2-4729-b9c8-b79d84187fe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a cobertura de 45% da tela de receitas",
              "fullTitle": "20 - Implemente os bot천es de categoria para serem utilizados como filtro Verifica a cobertura de 45% da tela de receitas",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', getId()).its('Recipes.functions.pct').should('be.gte', 45.00);\ncy.task('getCoverage', getId()).its('Recipes.lines.pct').should('be.gte', 45.00);\ncy.task('getCoverage', getId()).its('Recipes.branches.pct').should('be.gte', 45.00);",
              "err": {},
              "uuid": "782721e0-8f82-466c-b7ff-77431f7e684b",
              "parentUUID": "26bb74c9-51b2-4729-b9c8-b79d84187fe2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4664f592-6612-4430-80c9-baef5b5137ab",
            "28a72a3e-63fd-4c87-bc02-3a529a1b39c8",
            "782721e0-8f82-466c-b7ff-77431f7e684b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 332,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
          "title": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "timedOut": null,
              "duration": 324,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);",
              "err": {},
              "uuid": "afb06222-78b2-4f33-8531-910d653b73a0",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "405e2836-0b4c-4e31-92a7-e5dfa6a5ec95",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "timedOut": null,
              "duration": 337,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Chicken-category-filter\"]').click();\ncheckFirstTwelveRecipes(chickenMealsMock.meals);",
              "err": {},
              "uuid": "59e453ba-c66d-41eb-8464-80809012f948",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Dessert-category-filter\"]').click();\ncheckFirstTwelveRecipes(dessertMealsMock.meals);",
              "err": {},
              "uuid": "b4d3e168-1350-4108-a70f-03f3836d40df",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Goat-category-filter\"]').click();\ncheckFirstTwelveRecipes(goatMealsMock.meals);",
              "err": {},
              "uuid": "ac479c7a-a14b-4180-9c93-6ec17fd2a9df",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "timedOut": null,
              "duration": 1850,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);",
              "err": {},
              "uuid": "db1db53a-ecdc-4561-8c54-ec924a2a292d",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "timedOut": null,
              "duration": 324,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "6026b1e2-2635-4ae9-a027-245130607f78",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Shake\", deve-se carregar as 12 primeiras receitas de \"Shake\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Shake\", deve-se carregar as 12 primeiras receitas de \"Shake\"",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Shake-category-filter\"]').click();\ncheckFirstTwelveRecipes(milkDrinksMock.drinks, false);",
              "err": {},
              "uuid": "8db51b95-01c7-4a16-b11d-d046318fae8a",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Other/Unknown-category-filter\"]').click();\ncheckFirstTwelveRecipes(otherDrinksMock.drinks, false);",
              "err": {},
              "uuid": "ed1d4089-5b38-40e1-9614-a9577be90421",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "timedOut": null,
              "duration": 291,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocoa-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocoaDrinksMock.drinks, false);",
              "err": {},
              "uuid": "a8ecc3b9-ad57-425d-a798-a83745f3551a",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida deve existir a op챌찾o de filtrar por todas as categorias",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida deve existir a op챌찾o de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 489,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "595b7972-c4cb-4736-9b52-324c250830fe",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida deve existir a op챌찾o de filtrar por todas as categorias",
              "fullTitle": "21 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida deve existir a op챌찾o de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 512,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "439c831a-85fe-4b91-89a5-a54e47d3ab41",
              "parentUUID": "3bebbcce-37e6-420b-9aa7-433e2328a8d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afb06222-78b2-4f33-8531-910d653b73a0",
            "405e2836-0b4c-4e31-92a7-e5dfa6a5ec95",
            "59e453ba-c66d-41eb-8464-80809012f948",
            "b4d3e168-1350-4108-a70f-03f3836d40df",
            "ac479c7a-a14b-4180-9c93-6ec17fd2a9df",
            "db1db53a-ecdc-4561-8c54-ec924a2a292d",
            "6026b1e2-2635-4ae9-a027-245130607f78",
            "8db51b95-01c7-4a16-b11d-d046318fae8a",
            "ed1d4089-5b38-40e1-9614-a9577be90421",
            "a8ecc3b9-ad57-425d-a798-a83745f3551a",
            "595b7972-c4cb-4736-9b52-324c250830fe",
            "439c831a-85fe-4b91-89a5-a54e47d3ab41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5550,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4af0d0ab-c30a-4db9-b669-5664ecd46a86",
          "title": "22 - Implemente o filtro como um toggle, o qual se for selecionado novamente, o app deve retornar as receitas sem nenhum filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "22 - Implemente o filtro como um toggle, o qual se for selecionado novamente, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 415,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "cde359f4-52c1-4256-b3d3-b5aeedfe89f1",
              "parentUUID": "4af0d0ab-c30a-4db9-b669-5664ecd46a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "22 - Implemente o filtro como um toggle, o qual se for selecionado novamente, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 411,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "d7155bc7-3196-4f1b-b4a8-351addbc6736",
              "parentUUID": "4af0d0ab-c30a-4db9-b669-5664ecd46a86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cde359f4-52c1-4256-b3d3-b5aeedfe89f1",
            "d7155bc7-3196-4f1b-b4a8-351addbc6736"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 826,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06a21444-87a0-40fd-bc02-cfef6fd15238",
          "title": "23 - Redirecione a pessoa usu찼ria ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "23 - Redirecione a pessoa usu찼ria ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/foods', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(loc => expect(loc.pathname).to.eq('/foods/52977'));",
              "err": {},
              "uuid": "94e2224d-f59d-4d57-82ef-2005e68232b6",
              "parentUUID": "06a21444-87a0-40fd-bc02-cfef6fd15238",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "23 - Redirecione a pessoa usu찼ria ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(loc => expect(loc.pathname).to.eq('/drinks/15997'));",
              "err": {},
              "uuid": "c9aa8f63-38c0-4b52-aaef-553dd934eb55",
              "parentUUID": "06a21444-87a0-40fd-bc02-cfef6fd15238",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a cobertura de 90% da Tela de Receitas",
              "fullTitle": "23 - Redirecione a pessoa usu찼ria ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Verifica a cobertura de 90% da Tela de Receitas",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('getCoverage', getId()).its('Recipes.functions.pct').should('be.gte', 90.00);\ncy.task('getCoverage', getId()).its('Recipes.lines.pct').should('be.gte', 90.00);\ncy.task('getCoverage', getId()).its('Recipes.branches.pct').should('be.gte', 90.00);",
              "err": {},
              "uuid": "12c1af4f-00a8-4c89-9004-9f00b4df90eb",
              "parentUUID": "06a21444-87a0-40fd-bc02-cfef6fd15238",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94e2224d-f59d-4d57-82ef-2005e68232b6",
            "c9aa8f63-38c0-4b52-aaef-553dd934eb55",
            "12c1af4f-00a8-4c89-9004-9f00b4df90eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 513,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}